name: Build
on: [push]

jobs:
  make_matrix:
    name: Generate Matrix
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Checkout Node
        uses: actions/setup-node@v1
        with:
          node-version: "14.15.0"

      - run: npm install
      - run: npx tsc
      - run: node ./dist/makeMatrix.js
      - run: ls
      - id: set-matrix
        run: |
          JSON=$(cat ./matrix.json)
          echo $JSON
          echo "::set-output name=matrix::${JSON//'%'/'%25'}"

  make_release:
    name: Generate Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Checkout Node
        uses: actions/setup-node@v1
        with:
          node-version: "14.15.0"

      - name: get-npm-version
        id: package-version
        uses: tyankatsu0105/read-package-version-actions@v1

      - uses: mukunku/tag-exists-action@v1.0.0
        id: checkTag
        with:
          tag: 'v${{ steps.package-version.outputs.version  }}'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - run: echo ${{ steps.checkTag.outputs.exists }}

      - name: Create Release
        id: create_release
        if: steps.checkTag.outputs.exists == false
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.package-version.outputs.version }}
          release_name: v${{ steps.package-version.outputs.version }}
          draft: false
          prerelease: true

  build:
    continue-on-error: true
    name: Build
    needs: [make_matrix, make_release]
    runs-on: ${{ matrix.os }}
    env:
      CXX_COMPILER: 'g++-10'
      C_COMPILER: 'gcc-10'
    strategy:
      fail-fast: false
      matrix: ${{fromJson(needs.make_matrix.outputs.matrix)}}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Checkout Node
        uses: actions/setup-node@v2-beta
        with:
          node-version: "10.19.0"

      - if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install gcc-multilib g++-multilib

      - run: git clone https://github.com/greenheartgames/greenworks greenworks

      # Install dep
      - if: matrix.os == 'macos-latest'
        run: brew install p7zip

      - uses: actions/setup-python@v2
        with:
          python-version: 2.7.18

      - run: gcc -v

      # Extract
      - run: 7z x sdk.zip -p$ZIP_PASSWORD
        env:
          ZIP_PASSWORD: ${{ secrets.ZIP_PASSWORD }}

      - run: mv sdk greenworks/deps/steamworks_sdk
      - run: npm install
      - run: npm config set python python2.7
      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v1.0.2
        if: matrix.os == 'windows-latest'

      - run: |
          cd greenworks
          npm install

      - run: npx tsc
      - name: "Build"
        run: node dist/index.js --abi=${{matrix.abi}} --os=${{matrix.os}} --runtime=${{matrix.runtime}} --arch=${{matrix.arch}} --version=${{matrix.version}} --python=${{env.pythonLocation}}

      # - name: Upload binaries to release
      #   uses: svenstaro/upload-release-action@v2
      #   with:
      #     repo_token: ${{ secrets.GITHUB_TOKEN }}
      #     file: ./artifacts/*
      #     tag: v${{ steps.package-version.outputs.version }}
      #     overwrite: true
      #     file_glob: true
