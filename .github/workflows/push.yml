name: Build
on: [push]

jobs:
  make_matrix:
    name: Generate Matrix
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Checkout Node
        uses: actions/setup-node@v1
        with:
          node-version: "14.15.0"

      - run: npm install
      - run: npx tsc
      - run: node ./dist/makeMatrix.js
      - run: ls
      - id: set-matrix
        run: |
          JSON=$(cat ./matrix.json)
          echo $JSON
          echo "::set-output name=matrix::${JSON//'%'/'%25'}"

  build:
    name: Build
    needs: make_matrix
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix: ${{fromJson(needs.make_matrix.outputs.matrix)}}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Checkout Node
        uses: actions/setup-node@v1
        with:
          node-version: "14.15.0"

      - run: sudo apt-get install gcc-multilib g++-multilib

      - run: git clone https://github.com/greenheartgames/greenworks greenworks

      # Install dep
      - if: matrix.os == 'macos-latest'
        run: brew install p7zip

      - uses: actions/setup-python@v2
        with:
          python-version: 2.7.18

      - run: python --version
      - run: which python

      # Extract
      - run: 7z x sdk.zip -P${{ secrets.ZIP_PASSWORD }}

      - run: mv sdk greenworks/deps/steamworks_sdk
      - run: npm install

      - run: echo $CXX_COMPILER
      - run: echo $C_COMPILER
      - run: echo $CC
      - run: echo $CXX
      - run: echo $MACOSX_DEPLOYMENT_TARGET
      - run: echo $TRAVIS_TAG

      - run: |
          cd greenworks
          npm install

      - run: npx tsc
      - name: "Build"
        run: node dist/index.js --abi=${{matrix.abi}} --os=${{matrix.os}} --runtime=${{matrix.runtime}} --arch=${{matrix.arch}} --version=${{matrix.version}}
        env:
          PYTHON: 2.7.18

      - name: get-npm-version
        id: package-version
        uses: martinbeentjes/npm-get-version-action@master

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.package-version.outputs.current-version }}
          release_name: v${{ steps.package-version.outputs.current-version }}
          draft: false
          prerelease: true
      # - name: Upload Release Asset
      #   id: upload-release-asset
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
      #     asset_path: ./my-artifact.zip
      #     asset_name: my-artifact.zip
      #     asset_content_type: application/zip
