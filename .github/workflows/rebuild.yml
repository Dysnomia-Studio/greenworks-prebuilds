name: Build
on:
  push:
  workflow_dispatch:

jobs:
  make_matrix:
    name: Generate Matrix
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Checkout Node
        uses: actions/setup-node@v4
        with:
          node-version: "24"

      - run: npm ci
      - run: npx tsc
      - run: node ./dist/makeMatrix.js
      - id: set-matrix
        run: |
          JSON=$(cat ./matrix.json)
          echo $JSON
          echo "matrix=${JSON//'%'/'%25'}" >> $GITHUB_OUTPUT

  get-sdk:
    name: Get Sdk from Valve
    runs-on: ubuntu-latest
    steps:
      - uses: actions/cache@v4
        with:
          path: sdk
          key: steam-sdk

      - name: Download SDK if needed
        if: ${{ hashFiles('sdk/') == '' }}
        run: |
          wget https://partner.steamgames.com/downloads/steamworks_sdk_162.zip -O sdk.zip
          7z x sdk.zip -y

  build:
    continue-on-error: true
    name: Build
    needs: [make_matrix, get-sdk]
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix: ${{fromJson(needs.make_matrix.outputs.matrix)}}
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Checkout Node
        uses: actions/setup-node@v4
        with:
          node-version: "24"

      - uses: actions/cache@v4
        with:
          path: sdk
          key: steam-sdk
          enableCrossOsArchive: true

        # linux
      - if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install gcc-multilib g++-multilib

        # mac
      - if:
          matrix.os == 'macos-latest'
        run: brew install p7zip

        # windows
      - name: Add msbuild to PATH
        run: yarn global add --production windows-build-tools --vs2022
        if: matrix.os == 'windows-2022'

      - if: matrix.runtime == 'nw.js'
        uses: actions/setup-python@v4
        with:
          python-version: 'pypy2.7' 
      - if: matrix.runtime == 'nw.js'
        run: |
          yarn config set python python2.7
          yarn config set msvs_version 2022

      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: 'greenheartgames/greenworks'
          ref: 'v0.21.0'
          path: 'greenworks/'

      - run: gcc -v
      - run: g++ -v

      # Extract
      - run: mv sdk greenworks/deps/steamworks_sdk
        shell: bash
      - run: yarn install

      - run: |
          cd greenworks
          # git apply ../diff.patch
          yarn install
          cat package.json

      - run: ls

      - run: npx tsc

      - name: "Build"
        shell: bash
        run: |
          node dist/index.js --os=${{matrix.os}} --runtime=${{matrix.runtime}} --arch=${{matrix.arch}}

      - name: get-npm-version
        id: package-version
        uses: Saionaro/extract-package-version@v1.3.0

      - name: "ls"
        shell: bash
        run:
          ls greenworks/build/Release/

      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ./artifacts/*
          tag: v${{ steps.package-version.outputs.version }}
          overwrite: true
          file_glob: true